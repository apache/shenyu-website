"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[55671],{15680:(e,n,t)=>{t.d(n,{xA:()=>y,yg:()=>g});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},y=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,y=l(e,["components","mdxType","originalType","parentName"]),d=s(t),c=a,g=d["".concat(p,".").concat(c)]||d[c]||u[c]||i;return t?r.createElement(g,o(o({ref:n},y),{},{components:t})):r.createElement(g,o({ref:n},y))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},76634:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(58168),a=(t(96540),t(15680));const i={title:"Http Proxy",keywords:["Http"],description:"Integrate Http with shenyu gateway"},o=void 0,l={unversionedId:"user-guide/proxy/http-proxy",id:"version-2.4.0/user-guide/proxy/http-proxy",isDocsHomePage:!1,title:"Http Proxy",description:"Integrate Http with shenyu gateway",source:"@site/versioned_docs/version-2.4.0/user-guide/proxy/http-proxy.md",sourceDirName:"user-guide/proxy",slug:"/user-guide/proxy/http-proxy",permalink:"/docs/2.4.0/user-guide/proxy/http-proxy",editUrl:"https://github.com/apache/shenyu-website/edit/main/versioned_docs/version-2.4.0/user-guide/proxy/http-proxy.md",version:"2.4.0",frontMatter:{title:"Http Proxy",keywords:["Http"],description:"Integrate Http with shenyu gateway"},sidebar:"version-2.4.0/tutorialSidebar",previous:{title:"gRPC Proxy",permalink:"/docs/2.4.0/user-guide/proxy/grpc-proxy"},next:{title:"Motan Proxy",permalink:"/docs/2.4.0/user-guide/proxy/motan-proxy"}},p=[{value:"Add divide plugin in gateway",id:"add-divide-plugin-in-gateway",children:[]},{value:"Http request access gateway (for springMvc)",id:"http-request-access-gateway-for-springmvc",children:[]},{value:"Http request access gateway(other framework)",id:"http-request-access-gatewayother-framework",children:[]},{value:"User request",id:"user-request",children:[]}],s={toc:p},y="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(y,(0,r.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"This document is intended to help the ",(0,a.yg)("inlineCode",{parentName:"p"},"Http")," service access the ",(0,a.yg)("inlineCode",{parentName:"p"},"Apache ShenYu")," gateway. The ",(0,a.yg)("inlineCode",{parentName:"p"},"Apache ShenYu")," gateway uses the ",(0,a.yg)("inlineCode",{parentName:"p"},"Divide")," plugin to handle ",(0,a.yg)("inlineCode",{parentName:"p"},"Http")," requests."),(0,a.yg)("p",null,"Before the connection, start ",(0,a.yg)("inlineCode",{parentName:"p"},"shenyu-admin")," correctly, start ",(0,a.yg)("inlineCode",{parentName:"p"},"Divide")," plugin, and add related dependencies on the gateway and ",(0,a.yg)("inlineCode",{parentName:"p"},"Http")," application client. Refer to the previous ",(0,a.yg)("a",{parentName:"p",href:"../../quick-start/quick-start-http"},"Quick start with Http")," ."),(0,a.yg)("p",null,"For details about client access configuration, see ",(0,a.yg)("a",{parentName:"p",href:"./register-center-access"},"Application Client Access Config")," ."),(0,a.yg)("p",null,"For details about data synchronization configurations, see ",(0,a.yg)("a",{parentName:"p",href:"./use-data-sync"},"Data Synchronization Config")," ."),(0,a.yg)("h2",{id:"add-divide-plugin-in-gateway"},"Add divide plugin in gateway"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Add the following dependencies to the gateway's ",(0,a.yg)("inlineCode",{parentName:"li"},"pom.xml")," file:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-xml"},"        <dependency>\n            <groupId>org.apache.shenyu</groupId>\n            <artifactId>shenyu-spring-boot-starter-plugin-divide</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.shenyu</groupId>\n            <artifactId>shenyu-spring-boot-starter-plugin-httpclient</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n")),(0,a.yg)("h2",{id:"http-request-access-gateway-for-springmvc"},"Http request access gateway (for springMvc)"),(0,a.yg)("p",null,"Please refer this\uff1a",(0,a.yg)("a",{parentName:"p",href:"https://github.com/apache/incubator-shenyu/tree/v2.4.0/shenyu-examples/shenyu-examples-http"},"shenyu-examples-http")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"SpringBoot"),(0,a.yg)("ol",{parentName:"li"},(0,a.yg)("li",{parentName:"ol"},"Add the following dependencies to the ",(0,a.yg)("inlineCode",{parentName:"li"},"pom.xml")," file in your ",(0,a.yg)("inlineCode",{parentName:"li"},"Http")," service:")),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-xml"},"  <dependency>\n      <groupId>org.apache.shenyu</groupId>\n      <artifactId>shenyu-spring-boot-starter-client-springmvc</artifactId>\n      <version>${shenyu.version}</version>\n  </dependency>\n")),(0,a.yg)("ol",{parentName:"li",start:2},(0,a.yg)("li",{parentName:"ol"},"Add the following configuration to application.yaml:")),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"shenyu:\n  client:\n    registerType: http #zookeeper #etcd #nacos #consul\n    serverLists: http://localhost:9095 #localhost:2181 #http://localhost:2379 #localhost:8848\n    props:\n      contextPath: /http\n      appName: http\n      port: 8189\n      nacosNameSpace: ShenyuRegisterCenter\n")))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"SpringMvc"),(0,a.yg)("p",{parentName:"li"},"Add the following dependencies to the ",(0,a.yg)("inlineCode",{parentName:"p"},"pom.xml")," file in your ",(0,a.yg)("inlineCode",{parentName:"p"},"Http")," service:"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-xml"},"       <dependency>\n           <groupId>org.apache.shenyu</groupId>\n           <artifactId>shenyu-client-springmvc</artifactId>\n           <version>${shenyu.version}</version>\n       </dependency>\n")),(0,a.yg)("p",null,"Add the following to the ",(0,a.yg)("inlineCode",{parentName:"p"},"XML")," file defined by your ",(0,a.yg)("inlineCode",{parentName:"p"},"bean")," :"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-xml"},'   <bean id ="springMvcClientBeanPostProcessor" class ="org.apache.shenyu.client.springmvc.init.SpringMvcClientBeanPostProcessor">\n        <constructor-arg  ref="shenyuRegisterCenterConfig"/>\n   </bean>\n\n   <bean id="shenyuRegisterCenterConfig" class="org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig">\n        <property name="registerType" value="http"/>\n        <property name="serverList" value="http://localhost:9095"/>\n        <property name="props">\n             <map>\n               <entry key="contextPath" value="/your contextPath"/>\n               <entry key="appName" value="your name"/>\n               <entry key="port" value="your port"/>\n               <entry key="isFull" value="false"/>\n             </map>\n        </property>\n   </bean>\n')),(0,a.yg)("p",null,"Add this annotation ",(0,a.yg)("inlineCode",{parentName:"p"},"@ShenyuSpringMvcClient")," in your ",(0,a.yg)("inlineCode",{parentName:"p"},"controller")," interface."),(0,a.yg)("p",null,"You can apply the annotation to class-level in a controller. The name of the ",(0,a.yg)("inlineCode",{parentName:"p"},"path")," variable is prefix and ",(0,a.yg)("inlineCode",{parentName:"p"},"/**")," will apply proxy for entire interfaces."),(0,a.yg)("p",null,"Example(1)"),(0,a.yg)("p",null,"The following indicates that ",(0,a.yg)("inlineCode",{parentName:"p"},"/test/payment"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"/test/findByUserId")," will be proxy by the gateway."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},'  @RestController\n  @RequestMapping("/test")\n  @ShenyuSpringMvcClient(path = "/test/**")\n  public class HttpTestController {\n\n      @PostMapping("/payment")\n      public UserDTO post(@RequestBody final UserDTO userDTO) {\n          return userDTO;\n      }\n\n      @GetMapping("/findByUserId")\n      public UserDTO findByUserId(@RequestParam("userId") final String userId) {\n          UserDTO userDTO = new UserDTO();\n          userDTO.setUserId(userId);\n          userDTO.setUserName("hello world");\n          return userDTO;\n      }\n   }\n')),(0,a.yg)("p",null,"Example(2)"),(0,a.yg)("p",null,"The following indicates that ",(0,a.yg)("inlineCode",{parentName:"p"},"/order/save")," is proxied by the gateway, while ",(0,a.yg)("inlineCode",{parentName:"p"},"/order/findById")," is not."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-java"},'  @RestController\n  @RequestMapping("/order")\n  @ShenyuSpringMvcClient(path = "/order")\n  public class OrderController {\n\n      @PostMapping("/save")\n      @ShenyuSpringMvcClient(path = "/save")\n      public OrderDTO save(@RequestBody final OrderDTO orderDTO) {\n          orderDTO.setName("hello world save order");\n          return orderDTO;\n      }\n\n      @GetMapping("/findById")\n      public OrderDTO findById(@RequestParam("id") final String id) {\n          OrderDTO orderDTO = new OrderDTO();\n          orderDTO.setId(id);\n          orderDTO.setName("hello world findById");\n          return orderDTO;\n      }\n  }\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Start your project, your service interface is connected to the gateway, go to the ",(0,a.yg)("inlineCode",{parentName:"li"},"shenyu-admin")," management system plugin list ",(0,a.yg)("inlineCode",{parentName:"li"},"->")," HTTP process ",(0,a.yg)("inlineCode",{parentName:"li"},"->")," Divide, see automatically created selectors and rules.")),(0,a.yg)("h2",{id:"http-request-access-gatewayother-framework"},"Http request access gateway(other framework)"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"First, find ",(0,a.yg)("inlineCode",{parentName:"li"},"divide")," plugin in ",(0,a.yg)("inlineCode",{parentName:"li"},"shenyu-admin"),", add selector, and rules, and filter traffic matching."),(0,a.yg)("li",{parentName:"ul"},"If you don't know how to configure, please refer to ",(0,a.yg)("a",{parentName:"li",href:"../admin-usage/selector-and-rule"},"Selector Detailed Explanation"),"."),(0,a.yg)("li",{parentName:"ul"},"You can also develop your customized http-client\uff0crefer to ",(0,a.yg)("a",{parentName:"li",href:"../../developer/developer-shenyu-client"},"multi-language Http client development"),"\u3002")),(0,a.yg)("h2",{id:"user-request"},"User request"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Send the request as before, only two points need to notice."),(0,a.yg)("li",{parentName:"ul"},"Firstly, the domain name that requested before in your service, now need to replace with gateway's domain name."),(0,a.yg)("li",{parentName:"ul"},"Secondly, ",(0,a.yg)("inlineCode",{parentName:"li"},"Apache ShenYu")," Gateway needs a route prefix which comes from ",(0,a.yg)("inlineCode",{parentName:"li"},"contextPath"),", it configured during the integration with gateway, you can change it freely in ",(0,a.yg)("inlineCode",{parentName:"li"},"divide")," plugin of ",(0,a.yg)("inlineCode",{parentName:"li"},"shenyu-admin"),", if you are familiar with it.",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"for example, if you have an ",(0,a.yg)("inlineCode",{parentName:"li"},"order")," service, and it has an interface, the request url: ",(0,a.yg)("inlineCode",{parentName:"li"},"http://localhost:8080/test/save")),(0,a.yg)("li",{parentName:"ul"},"Now need to change to:  ",(0,a.yg)("inlineCode",{parentName:"li"},"http://localhost:9195/order/test/save")),(0,a.yg)("li",{parentName:"ul"},"We can see ",(0,a.yg)("inlineCode",{parentName:"li"},"localhost:9195")," is your gateway's ",(0,a.yg)("inlineCode",{parentName:"li"},"ip")," port\uff0cdefault port number is ",(0,a.yg)("inlineCode",{parentName:"li"},"9195")," \uff0c",(0,a.yg)("inlineCode",{parentName:"li"},"/order")," is your ",(0,a.yg)("inlineCode",{parentName:"li"},"contextPath")," which you configured with gateway."),(0,a.yg)("li",{parentName:"ul"},"Other parameters doesn't change in request method."))),(0,a.yg)("li",{parentName:"ul"},"Then you can visit, very easy and simple.")))}d.isMDXComponent=!0}}]);