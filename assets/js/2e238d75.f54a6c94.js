"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[23713],{15680:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>d});var n=r(96540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),g=c(r),y=i,d=g["".concat(p,".").concat(y)]||g[y]||u[y]||o;return r?n.createElement(d,a(a({ref:t},l),{},{components:r})):n.createElement(d,a({ref:t},l))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=y;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[g]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},47938:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(58168),i=(r(96540),r(15680));const o={title:"Application Client Access Config",keywords:["register center"],description:"register center access"},a=void 0,s={unversionedId:"user-guide/property-config/register-center-access",id:"version-2.6.1/user-guide/property-config/register-center-access",isDocsHomePage:!1,title:"Application Client Access Config",description:"register center access",source:"@site/versioned_docs/version-2.6.1/user-guide/property-config/register-center-access.md",sourceDirName:"user-guide/property-config",slug:"/user-guide/property-config/register-center-access",permalink:"/docs/user-guide/property-config/register-center-access",editUrl:"https://github.com/apache/shenyu-website/edit/main/versioned_docs/version-2.6.1/user-guide/property-config/register-center-access.md",version:"2.6.1",frontMatter:{title:"Application Client Access Config",keywords:["register center"],description:"register center access"},sidebar:"version-2.6.0/tutorialSidebar",previous:{title:"Gateway Property Config",permalink:"/docs/user-guide/property-config/gateway-property-config"},next:{title:"Register Center Instance Config",permalink:"/docs/user-guide/property-config/register-center-instance"}},p=[{value:"Http Registry Config",id:"http-registry-config",children:[]},{value:"Register different type API at same time",id:"register-different-type-api-at-same-time",children:[]}],c={toc:p},l="wrapper";function g(e){let{components:t,...r}=e;return(0,i.yg)(l,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},(0,i.yg)("em",{parentName:"p"},"Notice"),"\nAfter ShenYu version 2.6.1, the ShenYu register just support http type, and the middleware register type has been removed.\nSo, please use the http register type to register your service.\nShenYu Register Center isn't microservice register center, it just register metadata, selector data, rule data to shenyu-admin, and then shenyu-admin will sync data to shenyu-gateway.")),(0,i.yg)("p",null,"Application client access means to access your microservice to ShenYu gateway, currently supports HTTP, Dubbo, Spring Cloud, gRPC, Motan, Sofa, Tars and other protocols access. Currently, ShenYu just support HTTP register type."),(0,i.yg)("p",null,"This article describes how to configure the application client to access the Apache ShenYu gateway. For related principles, see ",(0,i.yg)("a",{parentName:"p",href:"../../design/register-center-design"},"Application Client Access")," in the design document ."),(0,i.yg)("img",{src:"/img/shenyu/register/app-client-access-config-en.png",width:"70%",height:"60%"}),(0,i.yg)("h3",{id:"http-registry-config"},"Http Registry Config"),(0,i.yg)("h4",{id:"shenyu-admin-config"},"shenyu-admin config"),(0,i.yg)("p",null,"Set the register type to '",(0,i.yg)("inlineCode",{parentName:"p"},"Http")," in the ",(0,i.yg)("inlineCode",{parentName:"p"},"yml")," file. The configuration information is as follows:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"shenyu:\n  register:\n    registerType: http\n    props:\n        checked: true  # is checked\n        zombieCheckTimes: 5 # how many times does it fail to detect the service\n        scheduledTime: 10 # timed detection interval time\n")),(0,i.yg)("img",{src:"/img/shenyu/register/register-http-admin-yml.png",width:"70%",height:"60%"}),(0,i.yg)("h4",{id:"shenyu-client-config"},"shenyu-client config"),(0,i.yg)("p",null,"The following shows the configuration information registered through ",(0,i.yg)("inlineCode",{parentName:"p"},"Http")," when the ",(0,i.yg)("inlineCode",{parentName:"p"},"Http")," service accesses the ",(0,i.yg)("inlineCode",{parentName:"p"},"Apache ShenYu")," gateway as a client. Other clients (such as ",(0,i.yg)("inlineCode",{parentName:"p"},"Dubbo")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"Spring Cloud"),") can be configured in the same way."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"shenyu:\n  register:\n    registerType: http\n    serverLists: http://localhost:9095\n    props:\n      username: admin\n      password: 123456\n  client:\n    http:\n        props:\n            contextPath: /http\n            appName: http\n            port: 8188  \n            isFull: false\n# registerType : register type, set http\n# serverList: when register type is http\uff0cset shenyu-admin address list\uff0cpls note 'http://' is necessary.\n# port: your project port number; apply to springmvc/tars/grpc\n# contextPath: your project's route prefix through shenyu gateway, such as /order \uff0c/product etc\uff0cgateway will route based on it.\n# appName\uff1ayour project name,the default value is`spring.application.name`.\n# isFull: set true means providing proxy for your entire service, or only a few controller. apply to springmvc/springcloud\n")),(0,i.yg)("img",{src:"/img/shenyu/register/register-http-client-yml.jpg",width:"70%",height:"60%"}),(0,i.yg)("h3",{id:"register-different-type-api-at-same-time"},"Register different type API at same time"),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"follow example use the http and dubbo.")),(0,i.yg)("p",null,"the ",(0,i.yg)("inlineCode",{parentName:"p"},"yml")," configuration like follow:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"shenyu:\n  register:\n    registerType: http\n    serverLists: localhost:9195\n    props:\n      username: admin\n      password: 123456\n  client:\n    http:\n        props:\n            contextPath: /http\n            appName: http\n            port: 8188  \n            isFull: false\n    dubbo:\n        props:\n            contextPath: /dubbo\n            appName: dubbo\n            port: 28080\n    props:\n      nacosNameSpace: ShenyuRegisterCenter\n# registerType : register type, set nacos \n# serverList: when register type is nacos, add nacos address list\n# http.port: your project port number; apply to springmvc\n# http.contextPath: your project's route prefix through shenyu gateway, such as /order \uff0c/product etc\uff0cgateway will route based on it.\n# http.appName\uff1ayour project name,the default value is`spring.application.name`.\n# http.isFull: set true means providing proxy for your entire service, or only a few controller. apply to springmvc/springcloud\n# dubbo.contextPath: your project dubbo service's context path\n# dubbo.port: your project dubbo rpc port\n# dubbo.appName: your project dubbo application name\n# nacosNameSpace: nacos namespace\n")),(0,i.yg)("p",null,"In conclusion, this paper mainly describes how to connect your microservices (currently supporting ",(0,i.yg)("inlineCode",{parentName:"p"},"Http"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"Dubbo"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"Spring Cloud"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"gRPC"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"Motan"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"Sofa"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"Tars")," and other protocols) to the ",(0,i.yg)("inlineCode",{parentName:"p"},"Apache ShenYu")," gateway. the Apache ShenYu gateway support registry has ",(0,i.yg)("inlineCode",{parentName:"p"},"Http")," This paper introduces the different ways to register configuration information when ",(0,i.yg)("inlineCode",{parentName:"p"},"Http")," service is used as the client to access ",(0,i.yg)("inlineCode",{parentName:"p"},"Apache ShenYu")," gateway."))}g.isMDXComponent=!0}}]);