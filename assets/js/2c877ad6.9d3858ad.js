"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[49887],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>m});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),g=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=g(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=g(n),y=a,m=u["".concat(o,".").concat(y)]||u[y]||s[y]||i;return n?r.createElement(m,p(p({ref:t},c),{},{components:n})):r.createElement(m,p({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,p=new Array(i);p[0]=y;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:a,p[1]=l;for(var g=2;g<i;g++)p[g]=n[g];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},57213:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var r=n(58168),a=(n(96540),n(15680));const i={title:"gRPC Plugin",keywords:["grpc-plugin"],description:"grpc-plugin"},p=void 0,l={unversionedId:"plugin-center/proxy/grpc-plugin",id:"version-2.4.1/plugin-center/proxy/grpc-plugin",isDocsHomePage:!1,title:"gRPC Plugin",description:"grpc-plugin",source:"@site/versioned_docs/version-2.4.1/plugin-center/proxy/grpc-plugin.md",sourceDirName:"plugin-center/proxy",slug:"/plugin-center/proxy/grpc-plugin",permalink:"/docs/2.4.1/plugin-center/proxy/grpc-plugin",editUrl:"https://github.com/apache/shenyu-website/edit/main/versioned_docs/version-2.4.1/plugin-center/proxy/grpc-plugin.md",version:"2.4.1",frontMatter:{title:"gRPC Plugin",keywords:["grpc-plugin"],description:"grpc-plugin"},sidebar:"version-2.4.1/tutorialSidebar",previous:{title:"Dubbo Plugin",permalink:"/docs/2.4.1/plugin-center/proxy/dubbo-plugin"},next:{title:"Motan Plugin",permalink:"/docs/2.4.1/plugin-center/proxy/motan-plugin"}},o=[{value:"Description",id:"description",children:[]},{value:"Plugin Setting",id:"plugin-setting",children:[]},{value:"Plugin Detail",id:"plugin-detail",children:[]},{value:"Metadata",id:"metadata",children:[]}],g={toc:o},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"description"},"Description"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The grpc plugin is a plugin that converts the Http protocol into the grpc protocol.")),(0,a.yg)("h2",{id:"plugin-setting"},"Plugin Setting"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Add related dependencies and enable plugin, please refer to: ",(0,a.yg)("a",{parentName:"p",href:"../../quick-start/quick-start-grpc"},"Quick start with gRPC")," .")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"gRPC")," client access, please refer to: ",(0,a.yg)("a",{parentName:"p",href:"/docs/2.4.1/user-guide/proxy/grpc-proxy"},"gRPC Proxy")," ."))),(0,a.yg)("h2",{id:"plugin-detail"},"Plugin Detail"),(0,a.yg)("p",null,"After the client accesses the ",(0,a.yg)("inlineCode",{parentName:"p"},"Apache ShenYu")," gateway, it will automatically register the selector and rule information. You can see it in PluginList -> rpc proxy -> grpc. For details about the selector and rule configuration, see ",(0,a.yg)("a",{parentName:"p",href:"../../user-guide/admin-usage/selector-and-rule"},"Selector And Rule Config")," ."),(0,a.yg)("h4",{id:"selector-handler"},"Selector Handler"),(0,a.yg)("img",{src:"/img/shenyu/plugin/grpc/selector_en.png",width:"80%",height:"80%"}),(0,a.yg)("p",null,"Selector Handler, the ",(0,a.yg)("inlineCode",{parentName:"p"},"handle")," field, is the processing operation that the gateway can perform after matching the traffic."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"config details\uff1a"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"ip:port"),"\uff1aenter the ip:port of your real service .")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"protocol"),"\uff1aindicates the Http protocol. Generally, the value is ",(0,a.yg)("inlineCode",{parentName:"p"},"http://")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"https://"),". If the value is not specified, the default value is ",(0,a.yg)("inlineCode",{parentName:"p"},"http://")," .")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"weight"),"\uff1aservice weight.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"status"),"\uff1aopen or close."))))),(0,a.yg)("h2",{id:"metadata"},"Metadata"),(0,a.yg)("p",null,"Each ",(0,a.yg)("inlineCode",{parentName:"p"},"grpc")," interface method, will correspond to a metadata, when the ",(0,a.yg)("inlineCode",{parentName:"p"},"grpc")," application client access to the ",(0,a.yg)("inlineCode",{parentName:"p"},"Apache ShenYu")," gateway, will be automatically registered, can be viewed in the ",(0,a.yg)("inlineCode",{parentName:"p"},"shenyu-admin")," background management system of the BasicConfig --\x3e Metadata management."),(0,a.yg)("img",{src:"/img/shenyu/plugin/grpc/metadata_en.png",width:"80%",height:"80%"}),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"AppName: specifies the name of the application to which the metadata belongs.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"MethodName: the name of the method to call.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Path: http request path.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"PathDescribe: the description of the path is easy to view.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"ParamsType: the parameters are separated by commas (,) in the order of interface parameter types.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"RpcExpand: other configurations of the ",(0,a.yg)("inlineCode",{parentName:"p"},"grpc")," interface, which support the ",(0,a.yg)("inlineCode",{parentName:"p"},"JSON")," format, are as follows:"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "timeout": 5000,\n  "methodType": "SERVER_STREAMING"\n}\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Interface: The fully qualified class name of the ",(0,a.yg)("inlineCode",{parentName:"p"},"grpc")," interface.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"RpcType\uff1achoose ",(0,a.yg)("inlineCode",{parentName:"p"},"grpc"),"."))))}u.isMDXComponent=!0}}]);