"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[60398],{15680:(e,n,a)=>{a.d(n,{xA:()=>c,yg:()=>d});var t=a(96540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),p=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),g=r,d=u["".concat(l,".").concat(g)]||u[g]||y[g]||s;return a?t.createElement(d,i(i({ref:n},c),{},{components:a})):t.createElement(d,i({ref:n},c))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=g;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<s;p++)i[p]=a[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},9616:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var t=a(58168),r=(a(96540),a(15680));const s={sidebar_position:6,title:"Use Different Data-Sync Strategy",keywords:["soul"],description:"use different data-sync strategy"},i=void 0,o={unversionedId:"users-guide/use-data-sync",id:"version-2.3.0-Legacy/users-guide/use-data-sync",isDocsHomePage:!1,title:"Use Different Data-Sync Strategy",description:"use different data-sync strategy",source:"@site/versioned_docs/version-2.3.0-Legacy/users-guide/use-data-sync.md",sourceDirName:"users-guide",slug:"/users-guide/use-data-sync",permalink:"/docs/2.3.0-Legacy/users-guide/use-data-sync",editUrl:"https://github.com/apache/shenyu-website/edit/main/versioned_docs/version-2.3.0-Legacy/users-guide/use-data-sync.md",version:"2.3.0-Legacy",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Use Different Data-Sync Strategy",keywords:["soul"],description:"use different data-sync strategy"},sidebar:"version-2.3.0-Legacy/tutorialSidebar",previous:{title:"Sofa RPC Proxy",permalink:"/docs/2.3.0-Legacy/users-guide/sofa-rpc-proxy"},next:{title:"Register Center Access",permalink:"/docs/2.3.0-Legacy/register-center/register-center-access"}},l=[{value:"Features",id:"features",children:[]},{value:"Websocket sync\uff08default method\uff0crecommend\uff09",id:"websocket-syncdefault-methodrecommend",children:[]},{value:"Zookeeper Sync",id:"zookeeper-sync",children:[]},{value:"Http long-polling sync",id:"http-long-polling-sync",children:[]},{value:"Nacos sync",id:"nacos-sync",children:[]}],p={toc:l},c="wrapper";function u(e){let{components:n,...a}=e;return(0,r.yg)(c,(0,t.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"features"},"Features"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Data synchronization is the key of gateway high performance, which is to sync 'soul-admin' config data into the JVM memory of soul cluster."),(0,r.yg)("li",{parentName:"ul"},"Implementation principles, pls refer to\uff1a",(0,r.yg)("a",{parentName:"li",href:"../design/data-sync"},"dataSync"),"\u3002"),(0,r.yg)("li",{parentName:"ul"},"In the article, the gateway is the environment you setup. please refer to\uff1a",(0,r.yg)("a",{parentName:"li",href:"../users-guide/soul-set-up"},"Environment Setup"),".")),(0,r.yg)("h2",{id:"websocket-syncdefault-methodrecommend"},"Websocket sync\uff08default method\uff0crecommend\uff09"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"gateway setting\uff08note:restart\uff09"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Add these dependencies in ",(0,r.yg)("inlineCode",{parentName:"p"},"pom.xml"),"\uff1a"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-xml"},"\x3c!--soul data sync start use websocket--\x3e\n<dependency>\n  <groupId>org.dromara</groupId>\n  <artifactId>soul-spring-boot-starter-sync-data-websocket</artifactId>\n  <version>${last.version}</version>\n</dependency>\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"add these config values in springboot yaml file:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"soul :\n  sync:\n      websocket :\n        # urls: address of soul-admin\uff0cmulti-address will be splitted with (,).\n        urls: ws://localhost:9095/websocket\n        allowOrigin: ws://localhost:9195\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"soul-admin config, enable this parameter ",(0,r.yg)("inlineCode",{parentName:"p"},"--soul.sync.websocket=''")," in soul admin, then restart service."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"soul:\n  sync:\n     websocket:\n"))))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"When the connection is established, getting the full data once,then adding and upating data subsequently, which is a good performance.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Support disconnection and reconnection (default 30 sec)."))),(0,r.yg)("h2",{id:"zookeeper-sync"},"Zookeeper Sync"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"gateway setting\uff08note: restart\uff09"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Add these dependencies in ",(0,r.yg)("inlineCode",{parentName:"p"},"pom.xml"),":"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-xml"},"\x3c!--soul data sync start use zookeeper--\x3e\n  <dependency>\n       <groupId>org.dromara</groupId>\n        <artifactId>soul-spring-boot-starter-sync-data-zookeeper</artifactId>\n        <version>${last.version}</version>\n  </dependency>\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Add these dependencies in  springboot yaml file:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"soul :\n  sync:\n      zookeeper:\n           url: localhost:2181\n           sessionTimeout: 5000\n           connectionTimeout: 2000\n#url: config with your zk address, used by the cluster environment, splitted with (,).\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"soul-admin config: configure the soul-admin's starting parameter with ",(0,r.yg)("inlineCode",{parentName:"p"},"--soul.sync.zookeeper.url='your address'"),",then restart the service."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"soul:\n  sync:\n    zookeeper:\n        url: localhost:2181\n        sessionTimeout: 5000\n        connectionTimeout: 2000\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"It is  good to use ZooKeeper synchronization mechanism with high timeliness, but we also have to deal with the unstable environment of ZK, cluster brain splitting and other\nproblems."))))),(0,r.yg)("h2",{id:"http-long-polling-sync"},"Http long-polling sync"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"gateway setting\uff08note:restart\uff09"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Add these dependencies in ",(0,r.yg)("inlineCode",{parentName:"p"},"pom.xml"),"\uff1a"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-xml"},"\x3c!--soul data sync start use http--\x3e\n  <dependency>\n       <groupId>org.dromara</groupId>\n        <artifactId>soul-spring-boot-starter-sync-data-http</artifactId>\n        <version>${last.version}</version>\n  </dependency>\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"add these config values in your springboot yaml file:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"soul :\n    sync:\n        http:\n             url: http://localhost:9095\n#url: config with your soul-admin's ip and port url, pls use (,) to split multi-admin cluster environment.\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"soul-admin config, configure the soul-admin's starting parameter with ",(0,r.yg)("inlineCode",{parentName:"p"},"--soul.sync.http=''"),", then restart service."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"soul:\n  sync:\n     http:\n"))))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"HTTP long-polling makes the gateway lightweight, but less time-sensitive.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"It pulls according to the group key, if the data is too large, it will have some influences, a small change under a group will pull the entire group.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"it may hit bug in soul-admin cluster."))),(0,r.yg)("h2",{id:"nacos-sync"},"Nacos sync"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"gateway setting\uff08note:restart\uff09"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Add these dependencies in your ",(0,r.yg)("inlineCode",{parentName:"p"},"pom.xml"),"\uff1a"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-xml"},"\x3c!--soul data sync start use nacos--\x3e\n  <dependency>\n       <groupId>org.dromara</groupId>\n        <artifactId>soul-spring-boot-starter-sync-data-nacos</artifactId>\n        <version>${last.version}</version>\n  </dependency>\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"add these config values in the springboot yaml file:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml"}," soul :\n     sync:\n        nacos:\n             url: localhost:8848\n             namespace: 1c10d748-af86-43b9-8265-75f487d20c6c\n             acm:\n               enabled: false\n               endpoint: acm.aliyun.com\n               namespace:\n               accessKey:\n               secretKey:\n # url: config with your nacos address, pls use (,) to split your cluster environment.\n # other configure\uff0cpls refer to the naocs website.\n")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"soul-admin config: passing values one by one with '--' operator in the soul-Admin startup parameter.")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"soul :\n      sync:\n         nacos:\n              url: localhost:8848\n              namespace: 1c10d748-af86-43b9-8265-75f487d20c6c\n              acm:\n                enabled: false\n                endpoint: acm.aliyun.com\n                namespace:\n                accessKey:\n                secretKey:\n")))))))}u.isMDXComponent=!0}}]);