"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[23397],{15680:(e,n,r)=>{r.d(n,{xA:()=>g,yg:()=>y});var t=r(96540);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=t.createContext({}),u=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},g=function(e){var n=u(e.components);return t.createElement(p.Provider,{value:n},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,g=a(e,["components","mdxType","originalType","parentName"]),s=u(r),d=i,y=s["".concat(p,".").concat(d)]||s[d]||c[d]||o;return r?t.createElement(y,l(l({ref:n},g),{},{components:r})):t.createElement(y,l({ref:n},g))}));function y(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,l=new Array(o);l[0]=d;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[s]="string"==typeof e?e:i,l[1]=a;for(var u=2;u<o;u++)l[u]=r[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},89320:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var t=r(58168),i=(r(96540),r(15680));const o={sidebar_position:3,title:"SpringCloud Plugin",keywords:["SpringCloud"],description:"SpringCloud Plugin"},l=void 0,a={unversionedId:"plugins/spring-cloud-plugin",id:"version-2.3.0-Legacy/plugins/spring-cloud-plugin",isDocsHomePage:!1,title:"SpringCloud Plugin",description:"SpringCloud Plugin",source:"@site/versioned_docs/version-2.3.0-Legacy/plugins/spring-cloud-plugin.md",sourceDirName:"plugins",slug:"/plugins/spring-cloud-plugin",permalink:"/docs/2.3.0-Legacy/plugins/spring-cloud-plugin",editUrl:"https://github.com/apache/shenyu-website/edit/main/versioned_docs/version-2.3.0-Legacy/plugins/spring-cloud-plugin.md",version:"2.3.0-Legacy",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"SpringCloud Plugin",keywords:["SpringCloud"],description:"SpringCloud Plugin"},sidebar:"version-2.3.0-Legacy/tutorialSidebar",previous:{title:"Dubbo Plugin",permalink:"/docs/2.3.0-Legacy/plugins/dubbo-plugin"},next:{title:"Sofa Plugin",permalink:"/docs/2.3.0-Legacy/plugins/sofa-plugin"}},p=[{value:"Explanation",id:"explanation",children:[]},{value:"Introducing Plugin Support of SpringCould Gateway",id:"introducing-plugin-support-of-springcould-gateway",children:[]},{value:"Plugin Setting",id:"plugin-setting",children:[]},{value:"Detail",id:"detail",children:[]}],u={toc:p},g="wrapper";function s(e){let{components:n,...r}=e;return(0,i.yg)(g,(0,t.A)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"explanation"},"Explanation"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"This plugin is the core of transforming ",(0,i.yg)("inlineCode",{parentName:"li"},"http protocol")," into ",(0,i.yg)("inlineCode",{parentName:"li"},"springCloud protocol"),".")),(0,i.yg)("h2",{id:"introducing-plugin-support-of-springcould-gateway"},"Introducing Plugin Support of SpringCould Gateway"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Introducing those dependencies in the pom.xml file of the gateway. ")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-xml"},"\x3c!--soul springCloud plugin start--\x3e\n<dependency>\n    <groupId>org.dromara</groupId>\n    <artifactId>soul-spring-boot-starter-plugin-springcloud</artifactId>\n    <version>${last.version}</version>\n</dependency>\n\n<dependency>\n    <groupId>org.dromara</groupId>\n    <artifactId>soul-spring-boot-starter-plugin-httpclient</artifactId>\n    <version>${last.version}</version>\n</dependency>\n\x3c!--soul springCloud plugin end--\x3e\n\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-commons</artifactId>\n    <version>2.2.0.RELEASE</version>\n</dependency> \n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>\n    <version>2.2.0.RELEASE</version>\n</dependency>\n")),(0,i.yg)("h2",{id:"plugin-setting"},"Plugin Setting"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"In ",(0,i.yg)("inlineCode",{parentName:"li"},"soul-admin")," --\x3e plugin management-> springCloud, set to enable. "),(0,i.yg)("li",{parentName:"ul"},"This plugin needs to cooperate with ",(0,i.yg)("inlineCode",{parentName:"li"},"starter")," dependency, please refer to:",(0,i.yg)("a",{parentName:"li",href:"../users-guide/spring-cloud-proxy"},"user-spring"),"."),(0,i.yg)("li",{parentName:"ul"},"Selectors and rules, please refer to: ",(0,i.yg)("a",{parentName:"li",href:"../admin/selector-and-rule"},"selector"),".")),(0,i.yg)("h2",{id:"detail"},"Detail"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Application name: it is your specific application name that needs to be invoked after the conditions are matched."),(0,i.yg)("li",{parentName:"ul"},"Soul will obtain the real IP of the corresponding service and initiate http proxy calls from registration center of springCloud.")))}s.isMDXComponent=!0}}]);