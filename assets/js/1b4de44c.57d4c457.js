"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[64462],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var r=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),g=i,y=d["".concat(l,".").concat(g)]||d[g]||p[g]||a;return n?r.createElement(y,o(o({ref:t},u),{},{components:n})):r.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},38117:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(58168),i=(n(96540),n(15680));const a={sidebar_position:2,title:"Configuration Flow Introduction",keywords:["soul"],description:"Configuration Flow Introduction"},o=void 0,c={unversionedId:"design/config",id:"version-2.3.0-Legacy/design/config",isDocsHomePage:!1,title:"Configuration Flow Introduction",description:"Configuration Flow Introduction",source:"@site/versioned_docs/version-2.3.0-Legacy/design/config.md",sourceDirName:"design",slug:"/design/config",permalink:"/docs/2.3.0-Legacy/design/config",editUrl:"https://github.com/apache/shenyu-website/edit/main/versioned_docs/version-2.3.0-Legacy/design/config.md",version:"2.3.0-Legacy",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Configuration Flow Introduction",keywords:["soul"],description:"Configuration Flow Introduction"},sidebar:"version-2.3.0-Legacy/tutorialSidebar",previous:{title:"Database Design",permalink:"/docs/2.3.0-Legacy/design/database-design"},next:{title:"Data Synchronization Design",permalink:"/docs/2.3.0-Legacy/design/data-sync"}},l=[{value:"Description",id:"description",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Feature",id:"feature",children:[]}],s={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.yg)(u,(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"description"},"Description"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"This article introduces the flow of synchronizing to the gateway after the data operation of admin backend system.")),(0,i.yg)("h2",{id:"usage"},"Usage"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"User can arbitrary modify data in soul-admin backend and this will immediately synchronize to the jvm memory of the gateway.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Synchronize the plugin data of soul,selector,rule data, metadata, signature data, etc.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"All the rules of plugin selectors are dynamically configured and take effect immediately without restarting the service.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Data Flow Chart:\n",(0,i.yg)("img",{parentName:"p",src:"https://yu199195.github.io/images/soul/plugin-data.png",alt:null})))),(0,i.yg)("h2",{id:"feature"},"Feature"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"All the configurations of user can be dynamically updated, there is no need to restart the service for any modification."),(0,i.yg)("li",{parentName:"ul"},"Local cache is used to provide efficient performance during high concurrency.")))}d.isMDXComponent=!0}}]);