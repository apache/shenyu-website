"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[17300],{15680:(e,n,r)=>{r.d(n,{xA:()=>c,yg:()=>g});var t=r(96540);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),u=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},c=function(e){var n=u(e.components);return t.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),y=o,g=p["".concat(l,".").concat(y)]||p[y]||d[y]||s;return r?t.createElement(g,a(a({ref:n},c),{},{components:r})):t.createElement(g,a({ref:n},c))}));function g(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=y;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=r[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},44360:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var t=r(58168),o=(r(96540),r(15680));const s={title:"\u6784\u5efa\u548c\u90e8\u7f72 Kubernetes \u63a7\u5236\u5668",description:"\u6784\u5efa\u548c\u90e8\u7f72 Kubernetes \u63a7\u5236\u5668"},a=void 0,i={unversionedId:"user-guide/kubernetes-controller/build-deploy",id:"version-2.6.1/user-guide/kubernetes-controller/build-deploy",isDocsHomePage:!1,title:"\u6784\u5efa\u548c\u90e8\u7f72 Kubernetes \u63a7\u5236\u5668",description:"\u6784\u5efa\u548c\u90e8\u7f72 Kubernetes \u63a7\u5236\u5668",source:"@site/i18n/zh/docusaurus-plugin-content-docs/version-2.6.1/user-guide/kubernetes-controller/build-deploy.md",sourceDirName:"user-guide/kubernetes-controller",slug:"/user-guide/kubernetes-controller/build-deploy",permalink:"/zh/docs/user-guide/kubernetes-controller/build-deploy",editUrl:"https://github.com/apache/shenyu-website/edit/main/i18n/zh/docusaurus-plugin-content-docs/version-2.6.1/user-guide/kubernetes-controller/build-deploy.md",version:"2.6.1",frontMatter:{title:"\u6784\u5efa\u548c\u90e8\u7f72 Kubernetes \u63a7\u5236\u5668",description:"\u6784\u5efa\u548c\u90e8\u7f72 Kubernetes \u63a7\u5236\u5668"},sidebar:"version-2.6.0/tutorialSidebar",previous:{title:"Websocket\u670d\u52a1\u63a5\u5165",permalink:"/zh/docs/user-guide/proxy/websocket-proxy"},next:{title:"Kubernetes \u63a7\u5236\u5668\u914d\u7f6e",permalink:"/zh/docs/user-guide/kubernetes-controller/config"}},l=[{value:"\u6784\u5efa",id:"\u6784\u5efa",children:[]},{value:"\u90e8\u7f72",id:"\u90e8\u7f72",children:[]}],u={toc:l},c="wrapper";function p(e){let{components:n,...r}=e;return(0,o.yg)(c,(0,t.A)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"\u672c\u7bc7\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 ShenYu Kubernetes Controller\u3002"),(0,o.yg)("h2",{id:"\u6784\u5efa"},"\u6784\u5efa"),(0,o.yg)("p",null,"\u5efa\u8bae\u53c2\u8003",(0,o.yg)("a",{parentName:"p",href:"/zh/docs/deployment/deployment-custom"},"\u81ea\u5b9a\u4e49\u90e8\u7f72"),"\u6784\u5efa\u81ea\u5b9a\u4e49\u7f51\u5173\uff0c\u5728\u7f51\u5173\u7684 Maven \u4f9d\u8d56\u4e2d\u52a0\u5165 shenyu-kubernetes-controller \u7684\u4f9d\u8d56\uff0c\u7f51\u5173\u5373\u53ef\u96c6\u6210 kubernetes \u63a7\u5236\u5668\u3002"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-xml"},"        <dependency>\n            <groupId>org.apache.shenyu</groupId>\n            <artifactId>shenyu-spring-boot-starter-k8s</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n")),(0,o.yg)("p",null,"\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b98\u65b9\u6784\u5efa\u7684 docker \u955c\u50cf\uff08TODO\uff0c\u672a\u5b8c\u6210\uff09"),(0,o.yg)("h2",{id:"\u90e8\u7f72"},"\u90e8\u7f72"),(0,o.yg)("p",null,"K8s \u90e8\u7f72\u6587\u4ef6\u53ef\u53c2\u8003\uff1a"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Namespace\nmetadata:\n  name: shenyu-ingress\n---\napiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: shenyu-ingress-controller\n  namespace: shenyu-ingress\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: shenyu-ingress-controller\n  namespace: shenyu-ingress\n  labels:\n    app: shenyu-ingress-controller\n    all: shenyu-ingress-controller\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: shenyu-ingress-controller\n  template:\n    metadata:\n      labels:\n        app: shenyu-ingress-controller\n    spec:\n      containers:\n      - name: shenyu-ingress-controller\n        image: apache/shenyu-integrated-test-k8s-ingress:latest\n        ports:\n        - containerPort: 9195\n        imagePullPolicy: IfNotPresent\n      serviceAccountName: shenyu-ingress-controller\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: shenyu-ingress-controller\n  namespace: shenyu-ingress\nspec:\n  selector:\n    app: shenyu-ingress-controller\n  type: NodePort\n  ports:\n    - port: 9195\n      targetPort: 9195\n      nodePort: 30095\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: shenyu-ingress-controller\nrules:\n- apiGroups:\n  - ""\n  resources:\n  - namespaces\n  - services\n  - endpoints\n  - secrets\n  - pods\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: shenyu-ingress-controller\n  namespace: shenyu-ingress\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: shenyu-ingress-controller\nsubjects:\n- kind: ServiceAccount\n  name: shenyu-ingress-controller\n  namespace: shenyu-ingress\n')),(0,o.yg)("p",null,"\u5176\u4e2d\uff0cService \u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6539\u6210 ",(0,o.yg)("inlineCode",{parentName:"p"},"LoadBalancer")," \u7c7b\u578b\u3002"))}p.isMDXComponent=!0}}]);